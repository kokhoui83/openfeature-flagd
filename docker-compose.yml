services:
  manager-backend:
    build: ./manager-backend
    container_name: flag-manager-backend
    ports:
      - "3001:3001"
    volumes:
      - ./manager-backend/data:/app/data
    environment:
      - PORT=3001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - default

  manager-frontend:
    build: ./manager
    container_name: flag-manager-frontend
    ports:
      - "8081:80"
    environment:
      - VITE_API_URL=http://manager-backend:3001
    depends_on:
      manager-backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - default
  flagd:
    image: ghcr.io/open-feature/flagd:latest
    volumes:
      - ./flagd/flags:/flags
      - ./flagd/config:/config
    command: [
      'start',
      '--config',
      '/config/flagd.yml'
    ]
    ports:
      - '8013:8013'
      - '8014:8014'  # Metrics port
      - '8016:8016'  # OFREP port
    depends_on:
      manager-backend:
        condition: service_healthy
    networks:
      - default
  server:
    build: ./server
    environment:
      - FLAGD_HOST=flagd
      - FLAGD_PORT=8013
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=3333
    ports:
      - '3333:3333'
    depends_on:
      - flagd
    networks:
      - default

  client:
    build: ./client
    environment:
      - VITE_FLAGD_HOST=flagd
      - VITE_FLAGD_PORT=8013
      - VITE_FLAGD_TLS=false
    ports:
      - '8080:80'
    depends_on:
      - server
      - flagd
    networks:
      - default

networks:
  default:
    name: flagd-network
    driver: bridge

volumes:
  flag-data:
    driver: local